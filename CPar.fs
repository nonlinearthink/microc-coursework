// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | QUEST
  | BREAK
  | CONTINUE
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | INT
  | FLOAT
  | CHAR
  | ELSE
  | IF
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DO
  | SWITCH
  | CASE
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_QUEST
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtCase
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | QUEST  -> 12 
  | BREAK  -> 13 
  | CONTINUE  -> 14 
  | NOT  -> 15 
  | SEQOR  -> 16 
  | SEQAND  -> 17 
  | EQ  -> 18 
  | NE  -> 19 
  | GT  -> 20 
  | LT  -> 21 
  | GE  -> 22 
  | LE  -> 23 
  | PLUS  -> 24 
  | MINUS  -> 25 
  | TIMES  -> 26 
  | DIV  -> 27 
  | MOD  -> 28 
  | SELFPLUS  -> 29 
  | SELFMINUS  -> 30 
  | INT  -> 31 
  | FLOAT  -> 32 
  | CHAR  -> 33 
  | ELSE  -> 34 
  | IF  -> 35 
  | NULL  -> 36 
  | PRINT  -> 37 
  | PRINTLN  -> 38 
  | RETURN  -> 39 
  | VOID  -> 40 
  | WHILE  -> 41 
  | FOR  -> 42 
  | DO  -> 43 
  | SWITCH  -> 44 
  | CASE  -> 45 
  | CSTCHAR _ -> 46 
  | CSTSTRING _ -> 47 
  | NAME _ -> 48 
  | CSTFLOAT _ -> 49 
  | CSTINT _ -> 50 
  | CSTBOOL _ -> 51 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_QUEST 
  | 13 -> TOKEN_BREAK 
  | 14 -> TOKEN_CONTINUE 
  | 15 -> TOKEN_NOT 
  | 16 -> TOKEN_SEQOR 
  | 17 -> TOKEN_SEQAND 
  | 18 -> TOKEN_EQ 
  | 19 -> TOKEN_NE 
  | 20 -> TOKEN_GT 
  | 21 -> TOKEN_LT 
  | 22 -> TOKEN_GE 
  | 23 -> TOKEN_LE 
  | 24 -> TOKEN_PLUS 
  | 25 -> TOKEN_MINUS 
  | 26 -> TOKEN_TIMES 
  | 27 -> TOKEN_DIV 
  | 28 -> TOKEN_MOD 
  | 29 -> TOKEN_SELFPLUS 
  | 30 -> TOKEN_SELFMINUS 
  | 31 -> TOKEN_INT 
  | 32 -> TOKEN_FLOAT 
  | 33 -> TOKEN_CHAR 
  | 34 -> TOKEN_ELSE 
  | 35 -> TOKEN_IF 
  | 36 -> TOKEN_NULL 
  | 37 -> TOKEN_PRINT 
  | 38 -> TOKEN_PRINTLN 
  | 39 -> TOKEN_RETURN 
  | 40 -> TOKEN_VOID 
  | 41 -> TOKEN_WHILE 
  | 42 -> TOKEN_FOR 
  | 43 -> TOKEN_DO 
  | 44 -> TOKEN_SWITCH 
  | 45 -> TOKEN_CASE 
  | 46 -> TOKEN_CSTCHAR 
  | 47 -> TOKEN_CSTSTRING 
  | 48 -> TOKEN_NAME 
  | 49 -> TOKEN_CSTFLOAT 
  | 50 -> TOKEN_CSTINT 
  | 51 -> TOKEN_CSTBOOL 
  | 54 -> TOKEN_end_of_input
  | 52 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtCase 
    | 39 -> NONTERM_StmtCase 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_StmtU 
    | 43 -> NONTERM_StmtU 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Exprs 
    | 81 -> NONTERM_Exprs 
    | 82 -> NONTERM_Exprs1 
    | 83 -> NONTERM_Exprs1 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_ConstFloat 
    | 89 -> NONTERM_ConstFloat 
    | 90 -> NONTERM_ConstChar 
    | 91 -> NONTERM_Type 
    | 92 -> NONTERM_Type 
    | 93 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 54 
let _fsyacc_tagOfErrorTerminal = 52

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | QUEST  -> "QUEST" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QUEST  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 16us; 65535us; 33us; 34us; 37us; 38us; 43us; 67us; 46us; 67us; 49us; 67us; 52us; 67us; 75us; 67us; 83us; 67us; 84us; 67us; 86us; 67us; 87us; 67us; 95us; 67us; 96us; 67us; 98us; 67us; 99us; 67us; 121us; 67us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 84us; 125us; 14us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 75us; 76us; 83us; 85us; 84us; 55us; 86us; 88us; 87us; 88us; 95us; 97us; 96us; 97us; 98us; 100us; 99us; 101us; 121us; 122us; 2us; 65535us; 116us; 117us; 122us; 123us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 84us; 56us; 87us; 124us; 96us; 126us; 51us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 65us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 57us; 79us; 82us; 80us; 81us; 83us; 57us; 84us; 57us; 86us; 57us; 87us; 57us; 91us; 94us; 92us; 93us; 95us; 57us; 96us; 57us; 98us; 57us; 99us; 57us; 104us; 107us; 105us; 106us; 113us; 114us; 121us; 57us; 132us; 133us; 135us; 162us; 138us; 139us; 140us; 141us; 165us; 143us; 166us; 144us; 167us; 145us; 168us; 146us; 169us; 147us; 170us; 148us; 171us; 149us; 172us; 150us; 173us; 151us; 174us; 152us; 175us; 153us; 176us; 154us; 177us; 155us; 178us; 156us; 179us; 157us; 180us; 158us; 181us; 160us; 185us; 159us; 186us; 159us; 197us; 161us; 200us; 162us; 51us; 65535us; 16us; 129us; 43us; 129us; 46us; 129us; 49us; 129us; 52us; 129us; 59us; 129us; 69us; 129us; 71us; 129us; 73us; 129us; 75us; 129us; 79us; 129us; 80us; 129us; 83us; 129us; 84us; 129us; 86us; 129us; 87us; 129us; 91us; 129us; 92us; 129us; 95us; 129us; 96us; 129us; 98us; 129us; 99us; 129us; 104us; 129us; 105us; 129us; 113us; 129us; 121us; 129us; 132us; 129us; 135us; 129us; 138us; 129us; 140us; 129us; 165us; 129us; 166us; 129us; 167us; 129us; 168us; 129us; 169us; 129us; 170us; 129us; 171us; 129us; 172us; 129us; 173us; 129us; 174us; 129us; 175us; 129us; 176us; 129us; 177us; 129us; 178us; 129us; 179us; 129us; 180us; 129us; 181us; 129us; 185us; 130us; 186us; 130us; 197us; 129us; 200us; 129us; 53us; 65535us; 16us; 131us; 43us; 131us; 46us; 131us; 49us; 131us; 52us; 131us; 59us; 131us; 69us; 131us; 71us; 131us; 73us; 131us; 75us; 131us; 79us; 131us; 80us; 131us; 83us; 131us; 84us; 131us; 86us; 131us; 87us; 131us; 91us; 131us; 92us; 131us; 95us; 131us; 96us; 131us; 98us; 131us; 99us; 131us; 104us; 131us; 105us; 131us; 113us; 131us; 119us; 120us; 121us; 131us; 132us; 131us; 135us; 131us; 138us; 131us; 140us; 131us; 165us; 131us; 166us; 131us; 167us; 131us; 168us; 131us; 169us; 131us; 170us; 131us; 171us; 131us; 172us; 131us; 173us; 131us; 174us; 131us; 175us; 131us; 176us; 131us; 177us; 131us; 178us; 131us; 179us; 131us; 180us; 131us; 181us; 131us; 185us; 131us; 186us; 131us; 194us; 196us; 197us; 131us; 200us; 131us; 54us; 65535us; 16us; 128us; 43us; 128us; 46us; 128us; 49us; 128us; 52us; 128us; 59us; 128us; 69us; 128us; 71us; 128us; 73us; 128us; 75us; 128us; 79us; 128us; 80us; 128us; 83us; 128us; 84us; 128us; 86us; 128us; 87us; 128us; 91us; 128us; 92us; 128us; 95us; 128us; 96us; 128us; 98us; 128us; 99us; 128us; 104us; 128us; 105us; 128us; 113us; 128us; 121us; 128us; 132us; 128us; 135us; 128us; 138us; 128us; 140us; 128us; 165us; 128us; 166us; 128us; 167us; 128us; 168us; 128us; 169us; 128us; 170us; 128us; 171us; 128us; 172us; 128us; 173us; 128us; 174us; 128us; 175us; 128us; 176us; 128us; 177us; 128us; 178us; 128us; 179us; 128us; 180us; 128us; 181us; 128us; 185us; 128us; 186us; 127us; 188us; 189us; 191us; 192us; 194us; 195us; 197us; 128us; 200us; 128us; 1us; 65535us; 135us; 136us; 2us; 65535us; 135us; 199us; 200us; 201us; 53us; 65535us; 16us; 182us; 43us; 182us; 46us; 182us; 49us; 182us; 52us; 182us; 59us; 182us; 69us; 182us; 71us; 182us; 73us; 182us; 75us; 182us; 79us; 182us; 80us; 182us; 83us; 182us; 84us; 182us; 86us; 182us; 87us; 182us; 91us; 182us; 92us; 182us; 95us; 182us; 96us; 182us; 98us; 182us; 99us; 182us; 104us; 182us; 105us; 182us; 113us; 182us; 119us; 182us; 121us; 182us; 132us; 182us; 135us; 182us; 138us; 182us; 140us; 182us; 165us; 182us; 166us; 182us; 167us; 182us; 168us; 182us; 169us; 182us; 170us; 182us; 171us; 182us; 172us; 182us; 173us; 182us; 174us; 182us; 175us; 182us; 176us; 182us; 177us; 182us; 178us; 182us; 179us; 182us; 180us; 182us; 181us; 182us; 185us; 182us; 186us; 182us; 194us; 182us; 197us; 182us; 200us; 182us; 53us; 65535us; 16us; 183us; 43us; 183us; 46us; 183us; 49us; 183us; 52us; 183us; 59us; 183us; 69us; 183us; 71us; 183us; 73us; 183us; 75us; 183us; 79us; 183us; 80us; 183us; 83us; 183us; 84us; 183us; 86us; 183us; 87us; 183us; 91us; 183us; 92us; 183us; 95us; 183us; 96us; 183us; 98us; 183us; 99us; 183us; 104us; 183us; 105us; 183us; 113us; 183us; 119us; 183us; 121us; 183us; 132us; 183us; 135us; 183us; 138us; 183us; 140us; 183us; 165us; 183us; 166us; 183us; 167us; 183us; 168us; 183us; 169us; 183us; 170us; 183us; 171us; 183us; 172us; 183us; 173us; 183us; 174us; 183us; 175us; 183us; 176us; 183us; 177us; 183us; 178us; 183us; 179us; 183us; 180us; 183us; 181us; 183us; 185us; 183us; 186us; 183us; 194us; 183us; 197us; 183us; 200us; 183us; 53us; 65535us; 16us; 184us; 43us; 184us; 46us; 184us; 49us; 184us; 52us; 184us; 59us; 184us; 69us; 184us; 71us; 184us; 73us; 184us; 75us; 184us; 79us; 184us; 80us; 184us; 83us; 184us; 84us; 184us; 86us; 184us; 87us; 184us; 91us; 184us; 92us; 184us; 95us; 184us; 96us; 184us; 98us; 184us; 99us; 184us; 104us; 184us; 105us; 184us; 113us; 184us; 119us; 184us; 121us; 184us; 132us; 184us; 135us; 184us; 138us; 184us; 140us; 184us; 165us; 184us; 166us; 184us; 167us; 184us; 168us; 184us; 169us; 184us; 170us; 184us; 171us; 184us; 172us; 184us; 173us; 184us; 174us; 184us; 175us; 184us; 176us; 184us; 177us; 184us; 178us; 184us; 179us; 184us; 180us; 184us; 181us; 184us; 185us; 184us; 186us; 184us; 194us; 184us; 197us; 184us; 200us; 184us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 59us; 64us; 70us; 85us; 88us; 96us; 148us; 200us; 254us; 309us; 311us; 314us; 368us; 422us; 476us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 17us; 8us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 34us; 40us; 1us; 26us; 17us; 27us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 27us; 2us; 28us; 31us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 17us; 31us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 33us; 17us; 33us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 33us; 17us; 33us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 33us; 17us; 33us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 33us; 1us; 33us; 1us; 34us; 3us; 34us; 40us; 41us; 1us; 34us; 3us; 34us; 40us; 41us; 19us; 34us; 40us; 41us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 34us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 34us; 3us; 34us; 40us; 41us; 1us; 34us; 1us; 34us; 2us; 34us; 40us; 1us; 34us; 1us; 35us; 2us; 35us; 42us; 1us; 35us; 2us; 35us; 42us; 18us; 35us; 42us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 35us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 35us; 2us; 35us; 42us; 1us; 35us; 1us; 36us; 2us; 36us; 43us; 1us; 36us; 2us; 36us; 43us; 1us; 36us; 2us; 36us; 43us; 1us; 36us; 2us; 36us; 43us; 18us; 36us; 43us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 36us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 36us; 2us; 36us; 43us; 1us; 36us; 2us; 36us; 43us; 1us; 37us; 1us; 37us; 17us; 37us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 2us; 38us; 39us; 2us; 38us; 39us; 2us; 38us; 39us; 2us; 38us; 39us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 4us; 44us; 47us; 76us; 79us; 3us; 44us; 47us; 79us; 1us; 45us; 2us; 45us; 73us; 1us; 46us; 1us; 47us; 17us; 47us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 48us; 75us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 17us; 49us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 50us; 17us; 50us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 51us; 17us; 52us; 53us; 54us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 16us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 17us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 79us; 18us; 52us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 82us; 83us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 2us; 73us; 76us; 1us; 73us; 1us; 74us; 2us; 74us; 79us; 1us; 75us; 1us; 76us; 2us; 76us; 79us; 1us; 76us; 2us; 77us; 78us; 2us; 77us; 79us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 81us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 85us; 2us; 86us; 89us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 60us; 62us; 65us; 67us; 71us; 73us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 145us; 147us; 165us; 167us; 170us; 172us; 174us; 176us; 178us; 180us; 198us; 200us; 202us; 204us; 206us; 224us; 226us; 244us; 246us; 264us; 266us; 268us; 270us; 274us; 276us; 280us; 300us; 318us; 320us; 324us; 326us; 328us; 331us; 333us; 335us; 338us; 340us; 343us; 362us; 380us; 382us; 385us; 387us; 389us; 392us; 394us; 397us; 399us; 402us; 404us; 407us; 426us; 444us; 446us; 449us; 451us; 454us; 456us; 458us; 476us; 478us; 480us; 482us; 484us; 487us; 490us; 493us; 496us; 498us; 500us; 502us; 504us; 509us; 513us; 515us; 518us; 520us; 522us; 540us; 543us; 545us; 547us; 549us; 551us; 569us; 571us; 589us; 591us; 609us; 627us; 645us; 663us; 681us; 699us; 717us; 735us; 753us; 771us; 789us; 807us; 825us; 843us; 861us; 879us; 896us; 914us; 932us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 1000us; 1002us; 1004us; 1007us; 1009us; 1011us; 1014us; 1016us; 1019us; 1022us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; |]
let _fsyacc_action_rows = 213
let _fsyacc_actionTableElements = [|4us; 16386us; 31us; 210us; 32us; 212us; 33us; 211us; 40us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 31us; 210us; 32us; 212us; 33us; 211us; 40us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 26us; 20us; 48us; 18us; 3us; 32768us; 1us; 22us; 26us; 20us; 48us; 18us; 3us; 32768us; 1us; 22us; 26us; 20us; 48us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 16us; 16392us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 26us; 20us; 48us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 26us; 20us; 48us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 50us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 48us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 31us; 210us; 32us; 212us; 33us; 211us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 31us; 210us; 32us; 212us; 33us; 211us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 31us; 210us; 32us; 212us; 33us; 211us; 0us; 16403us; 27us; 16405us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 31us; 210us; 32us; 212us; 33us; 211us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 32768us; 4us; 45us; 0us; 16404us; 27us; 16405us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 31us; 210us; 32us; 212us; 33us; 211us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16406us; 1us; 32768us; 7us; 49us; 27us; 16405us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 31us; 210us; 32us; 212us; 33us; 211us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16407us; 1us; 32768us; 7us; 52us; 27us; 16405us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 31us; 210us; 32us; 212us; 33us; 211us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 34us; 87us; 0us; 16410us; 17us; 32768us; 7us; 58us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 0us; 16411us; 16us; 32768us; 1us; 186us; 7us; 60us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16412us; 1us; 32768us; 7us; 62us; 0us; 16413us; 1us; 32768us; 7us; 64us; 0us; 16414us; 17us; 32768us; 7us; 66us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 0us; 16415us; 0us; 16416us; 1us; 32768us; 1us; 69us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 7us; 71us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 7us; 73us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 2us; 75us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16417us; 1us; 32768us; 1us; 79us; 1us; 32768us; 1us; 80us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 2us; 84us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 32768us; 2us; 83us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 32768us; 34us; 86us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16418us; 1us; 32768us; 1us; 91us; 1us; 32768us; 1us; 92us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 2us; 96us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 32768us; 2us; 95us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 78us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 90us; 42us; 68us; 43us; 99us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16419us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 32768us; 41us; 102us; 1us; 32768us; 41us; 103us; 1us; 32768us; 1us; 104us; 1us; 32768us; 1us; 105us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 2us; 109us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 32768us; 2us; 108us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 1us; 32768us; 7us; 110us; 1us; 32768us; 7us; 111us; 0us; 16420us; 0us; 16420us; 1us; 32768us; 1us; 113us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 17us; 32768us; 2us; 115us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 1us; 32768us; 3us; 116us; 1us; 32768us; 45us; 119us; 1us; 32768us; 4us; 118us; 0us; 16421us; 8us; 32768us; 1us; 185us; 10us; 188us; 25us; 204us; 36us; 206us; 46us; 209us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 32768us; 11us; 121us; 24us; 32768us; 1us; 186us; 3us; 43us; 10us; 188us; 13us; 61us; 14us; 63us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 35us; 77us; 36us; 206us; 37us; 140us; 38us; 142us; 39us; 59us; 41us; 89us; 42us; 68us; 43us; 98us; 44us; 112us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 16422us; 45us; 119us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 3us; 16428us; 2us; 193us; 5us; 197us; 9us; 132us; 2us; 16428us; 5us; 197us; 9us; 132us; 0us; 16429us; 1us; 16429us; 2us; 187us; 0us; 16430us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 16us; 16431us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 1us; 16459us; 1us; 135us; 15us; 16464us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 32768us; 2us; 137us; 0us; 16432us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 2us; 16433us; 29us; 163us; 30us; 164us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 16us; 16434us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 0us; 16435us; 2us; 16438us; 29us; 163us; 30us; 164us; 2us; 16439us; 29us; 163us; 30us; 164us; 5us; 16440us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 5us; 16441us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 2us; 16442us; 29us; 163us; 30us; 164us; 2us; 16443us; 29us; 163us; 30us; 164us; 2us; 16444us; 29us; 163us; 30us; 164us; 11us; 16445us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 11us; 16446us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 11us; 16447us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 11us; 16448us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 11us; 16449us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 11us; 16450us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 32768us; 11us; 179us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 16us; 16451us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 13us; 16452us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 16us; 32768us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 14us; 16453us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 32768us; 6us; 198us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 17us; 16466us; 8us; 200us; 12us; 178us; 16us; 181us; 17us; 180us; 18us; 172us; 19us; 173us; 20us; 174us; 21us; 175us; 22us; 176us; 23us; 177us; 24us; 167us; 25us; 168us; 26us; 169us; 27us; 170us; 28us; 171us; 29us; 163us; 30us; 164us; 0us; 16436us; 0us; 16437us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16457us; 3us; 32768us; 1us; 191us; 26us; 194us; 48us; 190us; 1us; 16458us; 5us; 197us; 0us; 16459us; 3us; 32768us; 1us; 191us; 26us; 194us; 48us; 190us; 2us; 32768us; 2us; 193us; 5us; 197us; 0us; 16460us; 10us; 32768us; 1us; 186us; 10us; 188us; 25us; 204us; 26us; 194us; 36us; 206us; 46us; 209us; 48us; 190us; 49us; 207us; 50us; 202us; 51us; 203us; 1us; 16461us; 5us; 197us; 0us; 16462us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16463us; 0us; 16465us; 15us; 32768us; 1us; 186us; 10us; 188us; 15us; 138us; 25us; 204us; 26us; 194us; 29us; 165us; 30us; 166us; 36us; 206us; 37us; 140us; 38us; 142us; 46us; 209us; 48us; 134us; 49us; 207us; 50us; 202us; 51us; 203us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 2us; 32768us; 49us; 208us; 50us; 205us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 20us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 55us; 72us; 73us; 75us; 79us; 81us; 85us; 88us; 89us; 92us; 93us; 95us; 96us; 98us; 100us; 104us; 106us; 108us; 109us; 113us; 115us; 117us; 118us; 119us; 121us; 125us; 126us; 154us; 156us; 157us; 185us; 186us; 188us; 216us; 217us; 219us; 247us; 248us; 249us; 251us; 252us; 270us; 271us; 288us; 289us; 291us; 292us; 294us; 295us; 313us; 314us; 315us; 317us; 333us; 351us; 367us; 385us; 401us; 419us; 444us; 445us; 447us; 449us; 465us; 481us; 499us; 517us; 542us; 567us; 569us; 594us; 619us; 620us; 622us; 624us; 640us; 656us; 674us; 692us; 717us; 742us; 743us; 768us; 793us; 795us; 797us; 799us; 801us; 817us; 833us; 851us; 869us; 871us; 873us; 874us; 875us; 877us; 893us; 911us; 913us; 915us; 917us; 918us; 927us; 929us; 954us; 956us; 957us; 958us; 959us; 960us; 964us; 967us; 968us; 970us; 971us; 987us; 1004us; 1006us; 1022us; 1024us; 1025us; 1041us; 1044us; 1060us; 1077us; 1078us; 1081us; 1084us; 1090us; 1096us; 1099us; 1102us; 1105us; 1117us; 1129us; 1141us; 1153us; 1165us; 1177us; 1195us; 1212us; 1226us; 1243us; 1258us; 1276us; 1294us; 1295us; 1296us; 1312us; 1328us; 1344us; 1360us; 1376us; 1392us; 1408us; 1424us; 1440us; 1456us; 1472us; 1488us; 1504us; 1520us; 1536us; 1552us; 1568us; 1569us; 1570us; 1571us; 1587us; 1603us; 1604us; 1608us; 1610us; 1611us; 1615us; 1618us; 1619us; 1630us; 1632us; 1633us; 1649us; 1650us; 1651us; 1667us; 1668us; 1669us; 1670us; 1673us; 1674us; 1675us; 1676us; 1677us; 1678us; 1679us; 1680us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 1us; 9us; 7us; 5us; 7us; 7us; 4us; 5us; 7us; 5us; 5us; 7us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 25us; 25us; 25us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 16426us; 65535us; 65535us; 16429us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16436us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 16455us; 16456us; 65535us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 65535us; 16460us; 65535us; 65535us; 16462us; 65535us; 16463us; 16465us; 65535us; 16467us; 16468us; 16469us; 65535us; 16470us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; |]
let _fsyacc_reductions ()  =    [| 
# 505 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               Prog _1 
                   )
# 51 "CPar.fsy"
                 : Absyn.program));
# 525 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               [] 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 547 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               VardecAndAssign (first _1, second _1, third _1)
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Vardec));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 85 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 616 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 627 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               _2                                      
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 638 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 649 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 661 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 674 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               [] 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               _1 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               [_1]     
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 720 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 732 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Block _2 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Block));
# 743 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               [] 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 753 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 765 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 777 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               DecAndAssign ( first _1, second _1, third _1)::_3 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 789 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Stmt));
# 800 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1 
                   )
# 142 "CPar.fsy"
                 : 'gentype_Stmt));
# 811 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 822 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Return None          
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 832 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Break                
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 842 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Continue             
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 852 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 863 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               _1                   
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 874 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                        For(_3,_5,_7,_9) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 901 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 913 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 925 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                        Switch(_3,_6)  
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 937 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtCase));
# 949 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                                          Case(_2,_4)::_5  
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtCase));
# 962 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtU));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtU));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtU));
# 999 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtU));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Access _1           
                   )
# 172 "CPar.fsy"
                 : 'gentype_Expr));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_Expr));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               _1                  
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1056 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim1("I++", _1)    
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim1("I--", _1)    
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim1("++I", _2)    
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim1("--I", _2)    
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1156 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1168 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1180 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1192 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1204 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1216 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1228 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1252 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1276 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1289 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1301 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1313 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               CstI _1             
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1324 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               CstF(_1)            
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1335 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               CstC(_1)            
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1346 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               _2                  
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1357 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Addr _2             
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1368 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               AccVar _1           
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1379 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               _2                  
                   )
# 217 "CPar.fsy"
                 : 'gentype_Access));
# 1390 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1401 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1412 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1424 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               []       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Exprs));
# 1434 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               _1       
                   )
# 225 "CPar.fsy"
                 : 'gentype_Exprs));
# 1445 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               [_1]     
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1456 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 230 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1468 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               _1       
                   )
# 234 "CPar.fsy"
                 : 'gentype_Const));
# 1479 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               _1       
                   )
# 235 "CPar.fsy"
                 : 'gentype_Const));
# 1490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               - _2     
                   )
# 236 "CPar.fsy"
                 : 'gentype_Const));
# 1501 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               -1       
                   )
# 237 "CPar.fsy"
                 : 'gentype_Const));
# 1511 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               _1       
                   )
# 241 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1522 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               - _2     
                   )
# 242 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1533 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               _1       
                   )
# 246 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1544 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               TypI     
                   )
# 250 "CPar.fsy"
                 : 'gentype_Type));
# 1554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               TypC     
                   )
# 251 "CPar.fsy"
                 : 'gentype_Type));
# 1564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               TypF     
                   )
# 252 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1575 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 55;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
